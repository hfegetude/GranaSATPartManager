const axios = require('axios');
var fs = require('fs');
var db = require('../dbConnect')


const getPrice = async (part) =>  {
    var response = await axios.post('https://api.mouser.com/api/v1/search/partnumber?apiKey=44089643-4844-4fe9-9385-0edfa82e0ad6', 
    // var response = await axios.post('https://api.mouser.com/api/v1/search/partnumber?apiKey=3132e450-807e-44e4-b5d9-126672a4a9ae', 
    {"SearchByPartRequest": {"mouserPartNumber": part}})
    return response.data
}


var parts = ["842-ICE40LP384SG32",
"595-TLV117118DCYT",
"710-865080640004",
"855-S8421-45R",
"571-1473150-4",
"712-BAT-HLD-001",
"511-HDMIULC6-4SC6",
"621-AP2331SA-7",
"710-865080540001",
"511-LD2980CM33",
"595-TLV7111225DSER",
"595-PGA2311U",
"771-PCF8523T/1118",
"621-DMG1012T-7",
"863-NCP5662DS33R4G",
"621-AZ1117CH-5.0TRG1",
"673-J00-0045NL",
"781-DG213DQ-E3",
"595-PGA2320IDW",
"887-1290Q16-U",
"595-INA2137UA/2K5",
"926-LM1117IMP3.3NOPB",
"863-MC33079DG",
"887-1280S14-U",
"887-1646S08-U",
"771-SC28L92A1B557",
"512-BSS138",
"556-ATTINY13A-SSUR",
"821-BZV55B7V5",
"821-BZV55B6V8",
"821-BZV55B10",
"777-CS42888-CQZ",
"701-MXL7704-AQB-T",
"571-2-826925-0",
"506-FSM6JH",
"568-NC3MBH",
"568-NC3FBH-2",
"710-865060340001",
"581-TAJR334K020R",
"538-09-50-1061",
"571-1473005-4",
"538-09-65-2068",
"926-LM3940IMP3.3NOPB",
"700-DS2777G",
"926-LM6142BIMX",
"595-TPS54540BQDDARQ1",
"595-BQ24650RVAR",
"942-IRFL024ZTRPBF",
"579-PIC16F690-I/SO",
"595-MSP430FR6989IPZR",
"963-NRS4018T2R2MDGJ",
"863-NSR0530HT1G",
"512-2N7002",
"749-902-260",
"761-2100-632-AL-7",
"603-RC0603JR-070RL",
"485-3709",
"595-TPS25940ARVCR",
"595-MAX3232EID",
"621-MMDT2222A-F",
"449-LFXTAL010595CUTT",
"595-INA3221AQRGVRQ1",
"855-M20-7830642",
"798-DF13-6P-1.25DSA",
"511-VIPER26HDTR",
"559-FC3BACALI16.0",
"781-SI7336ADP-T1-E3",
"595-MAX3232EIDR",
"749-939-250",
"798-DF13-2P-1.25DSA",
"511-L78L05ABD-TR",
"595-TL1451ACPWR",
"875-TYS6045100M-10",
"863-BC846ALT1G",
"781-SI7288DP-T1-GE3",
"78-VS-10BQ015-M35BT",
"584-ADP130AUJZ-1.2R7",
"511-LF90CPT-TR",
"81-GRM32ER71E226ME5L",
"774-CB3LV-3C-49M1",
"579-ENC28J60-I/SO",
"649-61729-1011BLF",
"810-PS1420P02CT",
"538-47151-1001",
"656-ST1W008S4AR1500",
"262-BME280",
"998-MIC5504-1.2YM5TR",
"449-LFXTAL002995BULK",
"623-2508056007Y3",
"356-ESP-WROOM-32",
"238-WM8804GEDS/V",
"709-RPT60B",
"446-081M.00301.00",
"356-ESP8266EX",
"595-TMP100AQDBVRQ1",
"886-LAN9514-JZX",
"710-865060640001",
"538-08-70-1031-CT",
"710-865230340001",
"673-T6074NL",
"559-FOXSD250F-20-LF",
"757-TORX1353F",
"356-ESP32-D2WD",
"238-WM8805GEDS/V",
"595-DRV135UA",
"584-ADG408BRUZ",
"200-SSQ12622GD",
"863-1SMB7.0AT3G",
"78-BZG05C3V6-E3-TR",
"621-1N4148W-F",
"512-BSS84",
"595-OPA354AIDBVR",
"511-LSM9DS1TR",
"595-INA3221AIRGVR",
"279-36502AR20JTDG",
"603-RC1206JR-1356RL",
"603-RC0603JR-0747KL",
"603-RC0603FR-0739KL",
"603-RC0603FR-07330KL",
"603-RC0603FR-07300KL",
"603-RC0603FR-07270KL",
"603-RC0603FR-07220KL",
"603-RC0603FR-07200KL",
"603-RC0603FR-07150KL",
"603-RC0603FR-0791KL",
"603-RC0603FR-0782KL",
"603-RC0603FR-0775KL",
"603-RC0603FR-0762KL",
"603-RC0603FR-0756KL",
"603-RC0603FR-0747KL",
"603-RC0603FR-0743KL",
"603-RC0603FR-0727KL",
"603-RC0603FR-0715KL",
"603-RC0603FR-0710KL",
"603-RC0603FR-078K2L",
"603-RC0603FR-076K8L",
"603-RC0603FR-075K6L",
"603-RC0603FR-074K7L",
"603-RC0603FR-073K3L",
"603-RC0603FR-072K7L",
"603-RC0603FR-071K5L",
"603-RC0603FR-0733KL",
"603-RC0603FR-071KL",
"603-RC1206JR-0730RL",
"603-RC1206JR-0743RL",
"603-RC1206JR-0724RL",
"603-RC1206JR-0751RL",
"81-GRM39X224K10D",
"603-CC603KRX7R7BB473",
"603-CC603KRX7R8BB153",
"603-CC603KRX7R9BB682",
"603-CC603KRX7R7BB102",
"Capacitor 27pF 0603",
"Capacitor 18pF 0603",
"603-RC0805FR-073K3L",
"603-RC0603FR-071ML",
"603-RC0603FR-07470RL",
"603-RC0603FR-07280RL",
"603-RC0603FR-07100RL",
"603-RC0603FR-0768RL",
"603-RC0603FR-0747RL",
"603-RC0603FR-0710RL",
"603-RC0603FR-074R7L",
"603-RC0603FR-071RL",
"603-RC0603FR-07820KL",
"603-RC0603FR-07560KL",
"603-RC0603FR-07649KL",
"603-RC0603FR-07750KL",
"603-RC0603FR-07768KL",
"603-RC0603FR-072ML",
"81-GRM188R71H302KA1D",
"603-RC0603FR-075M6L",
"81-GRM188R61A475KE5D",
"603-RC0603FR-072M4L",
"603-RC0603FR-072RL",
"603-RC0805FR-071KL",
"603-RC0805FR-071K2L",
"603-RC0805FR-071K5L",
"603-RC0805FR-071K62L",
"603-RC0805FR-071K8L",
"603-RC0805FR-073K6L",
"603-RC0805FR-073K9L",
"603-RC0805FR-074K32L",
"603-RC0805FR-074K7L",
"603-RC0805FR-076K2L",
"603-RC0805FR-076K81L",
"603-RC0805FR-077K5L",
"603-RC0805FR-0710KL",
"603-RC0805FR-0743KL",
"603-RC0805FR-0756KL",
"603-RC0805FR-0768K1L",
"603-RC0805FR-07300KL",
"603-RC0805FR-07270RL",
"603-RC0805FR-07220RL",
"603-RC0805FR-07200RL",
"603-RC0805FR-072R4L",
"603-RC0603FR-07390KL",
"603-RC0603FR-07470KL",
"700-MAX1771CSA",
"700-MAX8211CSA",
"595-MAX3318ECDBR",
"700-MAX1771ESA",
"595-ADS1112IDGST",
"595-SN74LVC1G125DCKR",
"595-LMV358IDGKR",
"584-ADUC7033BSTZ-88",
"584-ADUC7022BCPZ32",
"579-PIC16LF876A-I/SP",
"579-PIC16F1518-I/SP",
"454-W25Q40CLSSIG",
"454-W25Q40CLSNIG",
"782-CNY70",
"78-BZG05C3V3-M3-08",
"511-VIPER26HN",
"603-AC1206FR-1333RL",
"262-BMP280",
"512-FSUSB42UMX",
"645-51513620250F",
"530-5ST2-R",
"645-51513620625F",
"511-L298",
"842-40UP5KSG48ITR"]

var results = []
var retrieve =   () => {
     parts.forEach((p,i) => {
        setTimeout(async _ => {
                var data = await getPrice(p)
                console.log([p,data])
                results.push([p,data])
                fs.writeFile('results.json', JSON.stringify(results), 'utf8', ()=>{});
            },1000*i*(2.3))
        })
    }

var main = () => {
    let rawdata = fs.readFileSync('results.json');  
    let data = JSON.parse(rawdata); 
    data.forEach(e =>{
        var exactMatch = e[1].SearchResults.Parts.filter(f=> f.MouserPartNumber == e[0])
        if(exactMatch.length){
            exactMatch = exactMatch[0]
            exactMatch.PriceBreaks.forEach(price => {
                // console.log(e[0],price.Quantity,parseFloat(price.Price.split(" ")[0].replace(/,/g, '.')))
                var aux = parseFloat(price.Price.split(" ")[0].replace(/,/g, '.'))
                db.query("INSERT INTO prices (stock,price,quantity) VALUES ((SELECT id FROM stock where vendorreference=?),?,?)",
                [e[0],aux,price.Quantity])
            })

        }else{
            // console.log("Error on " + e)
        }
    }) 
}


main()
